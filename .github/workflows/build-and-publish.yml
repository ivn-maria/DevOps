name: Build and Publish Docker Image with Code Scans and Checks

on:
  push:
    branches:
      - main

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

jobs:
  SonarCloudScan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarCloud scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  SnykScan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependecies
      run: |
        npm install -g snyk@latest
        pip install -r src/requirements.txt

    - name: Snyk scan
      run: snyk test --all-projects
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  StyleChecks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install flake8
          npm install -g editorconfig-checker markdownlint-cli

      - name: Code style & lint check
        run: flake8

      - name: .editorconfig check
        run: editorconfig-checker

      - name: Markdown files check
        run: markdownlint '!**/*.md'

  UnitTests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install -r src/requirements.txt
          pip install flask-wtf

      - name: Unit tests run
        run: python3 -m unittest tests/app_test.py

  DatabaseMigrationsCheck:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: 123456
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

      flyway:
        image: redgate/flyway
        command: 
          -url=jdbc:mysql://localhost:3306/example?autoreconnect=true&allowPublicKeyRetrieval=true -user=root -password=root validate
        volumes:
          - .:/flyway/sql
        depends_on:
          - mysql

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Database Migration Check
        run: |
          docker run --rm \
            -v "$(pwd)/flyway/db:/flyway/db" \
            -v "$(pwd)/flyway/migrations:/flyway/sql" \
            -v "$(pwd)/flyway/config:/flyway/conf" \
            redgate/flyway \
            -url=jdbc:mysql://localhost:3306/example?autoreconnect=true&allowPublicKeyRetrieval=true \
            -user=flyway -password=123456 \
            validate
      
  HardcodedSecretsCheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Hardcoded secrets check
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  BuildAndPublish:
    runs-on: ubuntu-latest
    needs: ["SnykScan", "SonarCloudScan", "StyleChecks", "UnitTests", "DatabaseMigrationsCheck", "HardcodedSecretsCheck"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

    - name: Build Docker image
      run: docker build -t ivnmaria/classwork-1:latest .

    - name: Trivy scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ivnmaria/classwork-1:latest
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'

    - name: Push Docker image
      run: docker push ivnmaria/classwork-1
